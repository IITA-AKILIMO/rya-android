import java.time.LocalDateTime

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'com.vanniktech.android.junit.jacoco'
}

android {
    def releaseVersionName = computeBuildNumber()
    def appVersionCode = computeVersionCode()

    compileSdk 31

    defaultConfig {
        applicationId "com.akilimo.rya"
        minSdk 21
        targetSdk 31
        versionCode appVersionCode
        versionName releaseVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "PORT_NUMBER", "9085")
            versionNameSuffix ".dev"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE']
        }
    }

    namespace 'com.akilimo.rya'

}

static def computeVersionName() {
    def versionMajor = 1
    def versionMinor = LocalDateTime.now().getMonthValue()
    def buildNumber = LocalDateTime.now().getDayOfMonth()

    return String.format('%d.%d.%d', Integer.valueOf(System.env.VERSION_MAJOR ?: versionMajor),
            Integer.valueOf(System.env.VERSION_MINOR ?: versionMinor),
            Integer.valueOf(System.env.BUILD_NUMBER ?: buildNumber))
}

static def computeBuildNumber() {
    def newFile = new File("nextrelease.txt")
    newFile.createNewFile()

    def gitVersionTag = System.env.RELEASE_VERSION ?: computeVersionName()
    def branch = System.env.BRANCH_NAME ?: "not-beta"
    def buildNumber = System.env.BUILD_NUMBER ?: LocalDateTime.now().getDayOfMonth()

    if (branch == "beta") {
        def splitMe = gitVersionTag.split('\\.')
        def versionMajor = splitMe[0]
        def versionMinor = splitMe[1]
        def versionPatchRaw = splitMe[2].split('-')
        def versionPatch = versionPatchRaw[0].toInteger()
        gitVersionTag = String.format('%d.%d.%d_beta_%d',
                Integer.valueOf(versionMajor),
                Integer.valueOf(versionMinor),
                Integer.valueOf(versionPatch),
                Integer.valueOf(buildNumber))

    }

    println("This build tag is:" + gitVersionTag)
    newFile.write(gitVersionTag)
    return gitVersionTag
}

def computeVersionCode() {
    long unixTimestamp = Instant.now().getEpochSecond()
    def versionCode = System.env.RELEASE_VERSION ? unixTimestamp.intValue() : 1613040938
    return versionCode
}

dependencies {


    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

    //google libraries
    implementation 'com.google.android.material:material:1.5.0'

    //ROOM db
    implementation 'androidx.room:room-runtime:2.4.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
//    kapt 'androidx.room:room-compiler:2.4.2'
    ksp 'androidx.room:room-compiler:2.4.2'

    //androidx
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'

    //other libraries
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
//    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.7'
    implementation 'com.stepstone.stepper:material-stepper:4.3.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.jsibbold:zoomage:1.3.1'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.github.mohammadatif:Animatoo:master'
    implementation 'com.github.skydoves:powerspinner:1.1.9'

    implementation 'com.facebook.shimmer:shimmer:0.5.0'

//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
//    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
//    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    debugImplementation 'com.github.amitshekhariitbhu.Android-Debug-Database:debug-db:v1.0.6'
}
